- content_for :title, @model.is_a?(Software) ? _("Create new software") : (params[:type] == 'package' ? (_("Create %s") % _("Package")) : _("Create new model"))
- content_for :inventory_section, "active"

#new-model-view.wrapper.margin-top-m
  = render :partial => 'manage/tabs/inventory', :locals => {:active_tab => :inventory}

  .row.content-wrapper.min-height-xl.min-width-full.straight-top

    .margin-top-l.padding-horizontal-m
      .row
        .col1of2
          %h1.headline-l= yield :title
          %h2.headline-s.light= _("Insert all required information")
        .col1of2.text-align-right

          = link_to _('Cancel'), :back, class: 'button grey'

          %button#save.button.green
            = _("Save %s") % ( @model.is_a?(Software) ? _("Software") : (params[:type] == 'package' ? _("Package") : _("Model")))

    .padding-inset-m

      .row.padding-top-s

        = render :partial => "form"

-# - allowed_types = ['Software', 'Model']
-# - type = @model.type.humanize
-# - type = 'Model' unless allowed_types.include?(type)
-#
-# :coffeescript
-#   jQuery -> new App.ModelsNewController
-#     el: $("#new-model-view")
-#     model: new App.Model #{@model.to_json}
-#     manufacturers: #{Kernel.const_get(type).manufacturers.to_json}

- allowed_types = { 'Software' => Software, 'Model' => Model }
- type = @model.type.humanize
- safe_class = allowed_types[type] || Model

:coffeescript
  jQuery -> new App.ModelsNewController
    el: $("#new-model-view")
    model: new App.Model #{@model.to_json}
    manufacturers: #{safe_class.manufacturers.to_json}
